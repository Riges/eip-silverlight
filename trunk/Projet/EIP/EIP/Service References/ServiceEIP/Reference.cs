//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50401.0
// 
namespace EIP.ServiceEIP {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Account", Namespace="http://schemas.datacontract.org/2004/07/EIPLibrary")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EIP.ServiceEIP.AccountFacebook))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EIP.ServiceEIP.AccountTwitter))]
    public partial class Account : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long accountIDField;
        
        private long groupIDField;
        
        private string nameField;
        
        private EIP.ServiceEIP.Account.TypeAccount typeAccountField;
        
        private long userIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long accountID {
            get {
                return this.accountIDField;
            }
            set {
                if ((this.accountIDField.Equals(value) != true)) {
                    this.accountIDField = value;
                    this.RaisePropertyChanged("accountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long groupID {
            get {
                return this.groupIDField;
            }
            set {
                if ((this.groupIDField.Equals(value) != true)) {
                    this.groupIDField = value;
                    this.RaisePropertyChanged("groupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EIP.ServiceEIP.Account.TypeAccount typeAccount {
            get {
                return this.typeAccountField;
            }
            set {
                if ((this.typeAccountField.Equals(value) != true)) {
                    this.typeAccountField = value;
                    this.RaisePropertyChanged("typeAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long userID {
            get {
                return this.userIDField;
            }
            set {
                if ((this.userIDField.Equals(value) != true)) {
                    this.userIDField = value;
                    this.RaisePropertyChanged("userID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Account.TypeAccount", Namespace="http://schemas.datacontract.org/2004/07/EIPLibrary")]
        public enum TypeAccount : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Facebook = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Twitter = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Myspace = 2,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountFacebook", Namespace="http://schemas.datacontract.org/2004/07/EIPLibrary")]
    public partial class AccountFacebook : EIP.ServiceEIP.Account {
        
        private bool sessionExpiresField;
        
        private string sessionKeyField;
        
        private string sessionSecretField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool sessionExpires {
            get {
                return this.sessionExpiresField;
            }
            set {
                if ((this.sessionExpiresField.Equals(value) != true)) {
                    this.sessionExpiresField = value;
                    this.RaisePropertyChanged("sessionExpires");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sessionKey {
            get {
                return this.sessionKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.sessionKeyField, value) != true)) {
                    this.sessionKeyField = value;
                    this.RaisePropertyChanged("sessionKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sessionSecret {
            get {
                return this.sessionSecretField;
            }
            set {
                if ((object.ReferenceEquals(this.sessionSecretField, value) != true)) {
                    this.sessionSecretField = value;
                    this.RaisePropertyChanged("sessionSecret");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountTwitter", Namespace="http://schemas.datacontract.org/2004/07/EIPLibrary")]
    public partial class AccountTwitter : EIP.ServiceEIP.Account {
        
        private string pinField;
        
        private string tokenField;
        
        private string tokenSecretField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string pin {
            get {
                return this.pinField;
            }
            set {
                if ((object.ReferenceEquals(this.pinField, value) != true)) {
                    this.pinField = value;
                    this.RaisePropertyChanged("pin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string token {
            get {
                return this.tokenField;
            }
            set {
                if ((object.ReferenceEquals(this.tokenField, value) != true)) {
                    this.tokenField = value;
                    this.RaisePropertyChanged("token");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string tokenSecret {
            get {
                return this.tokenSecretField;
            }
            set {
                if ((object.ReferenceEquals(this.tokenSecretField, value) != true)) {
                    this.tokenSecretField = value;
                    this.RaisePropertyChanged("tokenSecret");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TwitterStatus", Namespace="http://schemas.datacontract.org/2004/07/TweetSharp.Twitter.Model")]
    public partial class TwitterStatus : EIP.ServiceEIP.PropertyChangedBase {
        
        private System.DateTime CreatedDateField;
        
        private long IdField;
        
        private string InReplyToScreenNameField;
        
        private System.Nullable<long> InReplyToStatusIdField;
        
        private System.Nullable<int> InReplyToUserIdField;
        
        private bool IsFavoritedField;
        
        private bool IsTruncatedField;
        
        private EIP.ServiceEIP.TwitterGeoLocation LocationField;
        
        private string RawSourceField;
        
        private EIP.ServiceEIP.TwitterStatus RetweetedStatusField;
        
        private string SourceField;
        
        private string TextField;
        
        private EIP.ServiceEIP.TwitterUser UserField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InReplyToScreenName {
            get {
                return this.InReplyToScreenNameField;
            }
            set {
                if ((object.ReferenceEquals(this.InReplyToScreenNameField, value) != true)) {
                    this.InReplyToScreenNameField = value;
                    this.RaisePropertyChanged("InReplyToScreenName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> InReplyToStatusId {
            get {
                return this.InReplyToStatusIdField;
            }
            set {
                if ((this.InReplyToStatusIdField.Equals(value) != true)) {
                    this.InReplyToStatusIdField = value;
                    this.RaisePropertyChanged("InReplyToStatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> InReplyToUserId {
            get {
                return this.InReplyToUserIdField;
            }
            set {
                if ((this.InReplyToUserIdField.Equals(value) != true)) {
                    this.InReplyToUserIdField = value;
                    this.RaisePropertyChanged("InReplyToUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFavorited {
            get {
                return this.IsFavoritedField;
            }
            set {
                if ((this.IsFavoritedField.Equals(value) != true)) {
                    this.IsFavoritedField = value;
                    this.RaisePropertyChanged("IsFavorited");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTruncated {
            get {
                return this.IsTruncatedField;
            }
            set {
                if ((this.IsTruncatedField.Equals(value) != true)) {
                    this.IsTruncatedField = value;
                    this.RaisePropertyChanged("IsTruncated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EIP.ServiceEIP.TwitterGeoLocation Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RawSource {
            get {
                return this.RawSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.RawSourceField, value) != true)) {
                    this.RawSourceField = value;
                    this.RaisePropertyChanged("RawSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EIP.ServiceEIP.TwitterStatus RetweetedStatus {
            get {
                return this.RetweetedStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.RetweetedStatusField, value) != true)) {
                    this.RetweetedStatusField = value;
                    this.RaisePropertyChanged("RetweetedStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EIP.ServiceEIP.TwitterUser User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PropertyChangedBase", Namespace="http://schemas.datacontract.org/2004/07/TweetSharp.Model")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EIP.ServiceEIP.TwitterGeoLocation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EIP.ServiceEIP.TwitterUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EIP.ServiceEIP.TwitterStatus))]
    public partial class PropertyChangedBase : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TwitterGeoLocation", Namespace="http://schemas.datacontract.org/2004/07/TweetSharp.Twitter.Model")]
    public partial class TwitterGeoLocation : EIP.ServiceEIP.PropertyChangedBase {
        
        private EIP.ServiceEIP.TwitterGeoLocation.GeoCoordinates _coordinatesField;
        
        private string _typeField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public EIP.ServiceEIP.TwitterGeoLocation.GeoCoordinates _coordinates {
            get {
                return this._coordinatesField;
            }
            set {
                if ((object.ReferenceEquals(this._coordinatesField, value) != true)) {
                    this._coordinatesField = value;
                    this.RaisePropertyChanged("_coordinates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _type {
            get {
                return this._typeField;
            }
            set {
                if ((object.ReferenceEquals(this._typeField, value) != true)) {
                    this._typeField = value;
                    this.RaisePropertyChanged("_type");
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="TwitterGeoLocation.GeoCoordinates", Namespace="http://schemas.datacontract.org/2004/07/TweetSharp.Twitter.Model")]
        public partial class GeoCoordinates : object, System.ComponentModel.INotifyPropertyChanged {
            
            private double Latitudek__BackingFieldField;
            
            private double Longitudek__BackingFieldField;
            
            [System.Runtime.Serialization.DataMemberAttribute(Name="<Latitude>k__BackingField", IsRequired=true)]
            public double Latitudek__BackingField {
                get {
                    return this.Latitudek__BackingFieldField;
                }
                set {
                    if ((this.Latitudek__BackingFieldField.Equals(value) != true)) {
                        this.Latitudek__BackingFieldField = value;
                        this.RaisePropertyChanged("Latitudek__BackingField");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute(Name="<Longitude>k__BackingField", IsRequired=true)]
            public double Longitudek__BackingField {
                get {
                    return this.Longitudek__BackingFieldField;
                }
                set {
                    if ((this.Longitudek__BackingFieldField.Equals(value) != true)) {
                        this.Longitudek__BackingFieldField = value;
                        this.RaisePropertyChanged("Longitudek__BackingField");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TwitterUser", Namespace="http://schemas.datacontract.org/2004/07/TweetSharp.Twitter.Model")]
    public partial class TwitterUser : EIP.ServiceEIP.PropertyChangedBase {
        
        private System.DateTime CreatedDateField;
        
        private string DescriptionField;
        
        private int FavouritesCountField;
        
        private int FollowersCountField;
        
        private int FriendsCountField;
        
        private System.Nullable<bool> HasNotificationsField;
        
        private int IdField;
        
        private System.Nullable<bool> IsFollowingField;
        
        private System.Nullable<bool> IsGeoEnabledField;
        
        private bool IsProfileBackgroundTiledField;
        
        private System.Nullable<bool> IsProtectedField;
        
        private System.Nullable<bool> IsVerifiedField;
        
        private string LanguageField;
        
        private string LocationField;
        
        private string NameField;
        
        private string ProfileBackgroundColorField;
        
        private string ProfileBackgroundImageUrlField;
        
        private string ProfileImageUrlField;
        
        private string ProfileLinkColorField;
        
        private string ProfileSidebarBorderColorField;
        
        private string ProfileSidebarFillColorField;
        
        private string ProfileTextColorField;
        
        private string RawSourceField;
        
        private string ScreenNameField;
        
        private EIP.ServiceEIP.TwitterStatus StatusField;
        
        private int StatusesCountField;
        
        private string TimeZoneField;
        
        private string UrlField;
        
        private string UtcOffsetField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FavouritesCount {
            get {
                return this.FavouritesCountField;
            }
            set {
                if ((this.FavouritesCountField.Equals(value) != true)) {
                    this.FavouritesCountField = value;
                    this.RaisePropertyChanged("FavouritesCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FollowersCount {
            get {
                return this.FollowersCountField;
            }
            set {
                if ((this.FollowersCountField.Equals(value) != true)) {
                    this.FollowersCountField = value;
                    this.RaisePropertyChanged("FollowersCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FriendsCount {
            get {
                return this.FriendsCountField;
            }
            set {
                if ((this.FriendsCountField.Equals(value) != true)) {
                    this.FriendsCountField = value;
                    this.RaisePropertyChanged("FriendsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> HasNotifications {
            get {
                return this.HasNotificationsField;
            }
            set {
                if ((this.HasNotificationsField.Equals(value) != true)) {
                    this.HasNotificationsField = value;
                    this.RaisePropertyChanged("HasNotifications");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsFollowing {
            get {
                return this.IsFollowingField;
            }
            set {
                if ((this.IsFollowingField.Equals(value) != true)) {
                    this.IsFollowingField = value;
                    this.RaisePropertyChanged("IsFollowing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsGeoEnabled {
            get {
                return this.IsGeoEnabledField;
            }
            set {
                if ((this.IsGeoEnabledField.Equals(value) != true)) {
                    this.IsGeoEnabledField = value;
                    this.RaisePropertyChanged("IsGeoEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsProfileBackgroundTiled {
            get {
                return this.IsProfileBackgroundTiledField;
            }
            set {
                if ((this.IsProfileBackgroundTiledField.Equals(value) != true)) {
                    this.IsProfileBackgroundTiledField = value;
                    this.RaisePropertyChanged("IsProfileBackgroundTiled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsProtected {
            get {
                return this.IsProtectedField;
            }
            set {
                if ((this.IsProtectedField.Equals(value) != true)) {
                    this.IsProtectedField = value;
                    this.RaisePropertyChanged("IsProtected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsVerified {
            get {
                return this.IsVerifiedField;
            }
            set {
                if ((this.IsVerifiedField.Equals(value) != true)) {
                    this.IsVerifiedField = value;
                    this.RaisePropertyChanged("IsVerified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfileBackgroundColor {
            get {
                return this.ProfileBackgroundColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileBackgroundColorField, value) != true)) {
                    this.ProfileBackgroundColorField = value;
                    this.RaisePropertyChanged("ProfileBackgroundColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfileBackgroundImageUrl {
            get {
                return this.ProfileBackgroundImageUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileBackgroundImageUrlField, value) != true)) {
                    this.ProfileBackgroundImageUrlField = value;
                    this.RaisePropertyChanged("ProfileBackgroundImageUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfileImageUrl {
            get {
                return this.ProfileImageUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileImageUrlField, value) != true)) {
                    this.ProfileImageUrlField = value;
                    this.RaisePropertyChanged("ProfileImageUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfileLinkColor {
            get {
                return this.ProfileLinkColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileLinkColorField, value) != true)) {
                    this.ProfileLinkColorField = value;
                    this.RaisePropertyChanged("ProfileLinkColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfileSidebarBorderColor {
            get {
                return this.ProfileSidebarBorderColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileSidebarBorderColorField, value) != true)) {
                    this.ProfileSidebarBorderColorField = value;
                    this.RaisePropertyChanged("ProfileSidebarBorderColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfileSidebarFillColor {
            get {
                return this.ProfileSidebarFillColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileSidebarFillColorField, value) != true)) {
                    this.ProfileSidebarFillColorField = value;
                    this.RaisePropertyChanged("ProfileSidebarFillColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfileTextColor {
            get {
                return this.ProfileTextColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileTextColorField, value) != true)) {
                    this.ProfileTextColorField = value;
                    this.RaisePropertyChanged("ProfileTextColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RawSource {
            get {
                return this.RawSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.RawSourceField, value) != true)) {
                    this.RawSourceField = value;
                    this.RaisePropertyChanged("RawSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScreenName {
            get {
                return this.ScreenNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ScreenNameField, value) != true)) {
                    this.ScreenNameField = value;
                    this.RaisePropertyChanged("ScreenName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EIP.ServiceEIP.TwitterStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusesCount {
            get {
                return this.StatusesCountField;
            }
            set {
                if ((this.StatusesCountField.Equals(value) != true)) {
                    this.StatusesCountField = value;
                    this.RaisePropertyChanged("StatusesCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeZone {
            get {
                return this.TimeZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeZoneField, value) != true)) {
                    this.TimeZoneField = value;
                    this.RaisePropertyChanged("TimeZone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UtcOffset {
            get {
                return this.UtcOffsetField;
            }
            set {
                if ((object.ReferenceEquals(this.UtcOffsetField, value) != true)) {
                    this.UtcOffsetField = value;
                    this.RaisePropertyChanged("UtcOffset");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceEIP.IServiceEIP")]
    public interface IServiceEIP {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceEIP/IsUp", ReplyAction="http://tempuri.org/IServiceEIP/IsUpResponse")]
        System.IAsyncResult BeginIsUp(System.AsyncCallback callback, object asyncState);
        
        bool EndIsUp(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceEIP/GetAccountByUserID", ReplyAction="http://tempuri.org/IServiceEIP/GetAccountByUserIDResponse")]
        System.IAsyncResult BeginGetAccountByUserID(long userID, System.AsyncCallback callback, object asyncState);
        
        EIP.ServiceEIP.Account EndGetAccountByUserID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceEIP/GetAccountsByUserID", ReplyAction="http://tempuri.org/IServiceEIP/GetAccountsByUserIDResponse")]
        System.IAsyncResult BeginGetAccountsByUserID(long userID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<EIP.ServiceEIP.Account> EndGetAccountsByUserID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceEIP/GetAccountsByGroupID", ReplyAction="http://tempuri.org/IServiceEIP/GetAccountsByGroupIDResponse")]
        System.IAsyncResult BeginGetAccountsByGroupID(long groupID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<EIP.ServiceEIP.Account> EndGetAccountsByGroupID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceEIP/GetAccountsByTwitter", ReplyAction="http://tempuri.org/IServiceEIP/GetAccountsByTwitterResponse")]
        System.IAsyncResult BeginGetAccountsByTwitter(string pseudo, string password, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<EIP.ServiceEIP.Account> EndGetAccountsByTwitter(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceEIP/AddAccount", ReplyAction="http://tempuri.org/IServiceEIP/AddAccountResponse")]
        System.IAsyncResult BeginAddAccount(EIP.ServiceEIP.Account newAccount, string token, string pin, System.AsyncCallback callback, object asyncState);
        
        bool EndAddAccount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceEIP/SaveAccount", ReplyAction="http://tempuri.org/IServiceEIP/SaveAccountResponse")]
        System.IAsyncResult BeginSaveAccount(EIP.ServiceEIP.Account accountToSave, System.AsyncCallback callback, object asyncState);
        
        bool EndSaveAccount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceEIP/DeleteAccount", ReplyAction="http://tempuri.org/IServiceEIP/DeleteAccountResponse")]
        System.IAsyncResult BeginDeleteAccount(long accountID, System.AsyncCallback callback, object asyncState);
        
        long EndDeleteAccount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceEIP/testfb", ReplyAction="http://tempuri.org/IServiceEIP/testfbResponse")]
        System.IAsyncResult Begintestfb(System.AsyncCallback callback, object asyncState);
        
        EIP.ServiceEIP.AccountFacebook Endtestfb(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceEIP/testT", ReplyAction="http://tempuri.org/IServiceEIP/testTResponse")]
        System.IAsyncResult BegintestT(System.AsyncCallback callback, object asyncState);
        
        EIP.ServiceEIP.AccountTwitter EndtestT(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceEIP/GetRequestToken", ReplyAction="http://tempuri.org/IServiceEIP/GetRequestTokenResponse")]
        System.IAsyncResult BeginGetRequestToken(string consumerKey, string consumerSecret, System.AsyncCallback callback, object asyncState);
        
        string EndGetRequestToken(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceEIP/LoadHomeStatuses", ReplyAction="http://tempuri.org/IServiceEIP/LoadHomeStatusesResponse")]
        System.IAsyncResult BeginLoadHomeStatuses(string token, string tokenSecret, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<EIP.ServiceEIP.TwitterStatus> EndLoadHomeStatuses(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceEIPChannel : EIP.ServiceEIP.IServiceEIP, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsUpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsUpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAccountByUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAccountByUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EIP.ServiceEIP.Account Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EIP.ServiceEIP.Account)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAccountsByUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAccountsByUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<EIP.ServiceEIP.Account> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<EIP.ServiceEIP.Account>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAccountsByGroupIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAccountsByGroupIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<EIP.ServiceEIP.Account> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<EIP.ServiceEIP.Account>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAccountsByTwitterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAccountsByTwitterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<EIP.ServiceEIP.Account> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<EIP.ServiceEIP.Account>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public long Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class testfbCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public testfbCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EIP.ServiceEIP.AccountFacebook Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EIP.ServiceEIP.AccountFacebook)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class testTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public testTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EIP.ServiceEIP.AccountTwitter Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EIP.ServiceEIP.AccountTwitter)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRequestTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRequestTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadHomeStatusesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadHomeStatusesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<EIP.ServiceEIP.TwitterStatus> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<EIP.ServiceEIP.TwitterStatus>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceEIPClient : System.ServiceModel.ClientBase<EIP.ServiceEIP.IServiceEIP>, EIP.ServiceEIP.IServiceEIP {
        
        private BeginOperationDelegate onBeginIsUpDelegate;
        
        private EndOperationDelegate onEndIsUpDelegate;
        
        private System.Threading.SendOrPostCallback onIsUpCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAccountByUserIDDelegate;
        
        private EndOperationDelegate onEndGetAccountByUserIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetAccountByUserIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAccountsByUserIDDelegate;
        
        private EndOperationDelegate onEndGetAccountsByUserIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetAccountsByUserIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAccountsByGroupIDDelegate;
        
        private EndOperationDelegate onEndGetAccountsByGroupIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetAccountsByGroupIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAccountsByTwitterDelegate;
        
        private EndOperationDelegate onEndGetAccountsByTwitterDelegate;
        
        private System.Threading.SendOrPostCallback onGetAccountsByTwitterCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddAccountDelegate;
        
        private EndOperationDelegate onEndAddAccountDelegate;
        
        private System.Threading.SendOrPostCallback onAddAccountCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveAccountDelegate;
        
        private EndOperationDelegate onEndSaveAccountDelegate;
        
        private System.Threading.SendOrPostCallback onSaveAccountCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteAccountDelegate;
        
        private EndOperationDelegate onEndDeleteAccountDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteAccountCompletedDelegate;
        
        private BeginOperationDelegate onBegintestfbDelegate;
        
        private EndOperationDelegate onEndtestfbDelegate;
        
        private System.Threading.SendOrPostCallback ontestfbCompletedDelegate;
        
        private BeginOperationDelegate onBegintestTDelegate;
        
        private EndOperationDelegate onEndtestTDelegate;
        
        private System.Threading.SendOrPostCallback ontestTCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRequestTokenDelegate;
        
        private EndOperationDelegate onEndGetRequestTokenDelegate;
        
        private System.Threading.SendOrPostCallback onGetRequestTokenCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadHomeStatusesDelegate;
        
        private EndOperationDelegate onEndLoadHomeStatusesDelegate;
        
        private System.Threading.SendOrPostCallback onLoadHomeStatusesCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ServiceEIPClient() {
        }
        
        public ServiceEIPClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceEIPClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceEIPClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceEIPClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<IsUpCompletedEventArgs> IsUpCompleted;
        
        public event System.EventHandler<GetAccountByUserIDCompletedEventArgs> GetAccountByUserIDCompleted;
        
        public event System.EventHandler<GetAccountsByUserIDCompletedEventArgs> GetAccountsByUserIDCompleted;
        
        public event System.EventHandler<GetAccountsByGroupIDCompletedEventArgs> GetAccountsByGroupIDCompleted;
        
        public event System.EventHandler<GetAccountsByTwitterCompletedEventArgs> GetAccountsByTwitterCompleted;
        
        public event System.EventHandler<AddAccountCompletedEventArgs> AddAccountCompleted;
        
        public event System.EventHandler<SaveAccountCompletedEventArgs> SaveAccountCompleted;
        
        public event System.EventHandler<DeleteAccountCompletedEventArgs> DeleteAccountCompleted;
        
        public event System.EventHandler<testfbCompletedEventArgs> testfbCompleted;
        
        public event System.EventHandler<testTCompletedEventArgs> testTCompleted;
        
        public event System.EventHandler<GetRequestTokenCompletedEventArgs> GetRequestTokenCompleted;
        
        public event System.EventHandler<LoadHomeStatusesCompletedEventArgs> LoadHomeStatusesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EIP.ServiceEIP.IServiceEIP.BeginIsUp(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsUp(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool EIP.ServiceEIP.IServiceEIP.EndIsUp(System.IAsyncResult result) {
            return base.Channel.EndIsUp(result);
        }
        
        private System.IAsyncResult OnBeginIsUp(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((EIP.ServiceEIP.IServiceEIP)(this)).BeginIsUp(callback, asyncState);
        }
        
        private object[] OnEndIsUp(System.IAsyncResult result) {
            bool retVal = ((EIP.ServiceEIP.IServiceEIP)(this)).EndIsUp(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsUpCompleted(object state) {
            if ((this.IsUpCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsUpCompleted(this, new IsUpCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsUpAsync() {
            this.IsUpAsync(null);
        }
        
        public void IsUpAsync(object userState) {
            if ((this.onBeginIsUpDelegate == null)) {
                this.onBeginIsUpDelegate = new BeginOperationDelegate(this.OnBeginIsUp);
            }
            if ((this.onEndIsUpDelegate == null)) {
                this.onEndIsUpDelegate = new EndOperationDelegate(this.OnEndIsUp);
            }
            if ((this.onIsUpCompletedDelegate == null)) {
                this.onIsUpCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsUpCompleted);
            }
            base.InvokeAsync(this.onBeginIsUpDelegate, null, this.onEndIsUpDelegate, this.onIsUpCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EIP.ServiceEIP.IServiceEIP.BeginGetAccountByUserID(long userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAccountByUserID(userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EIP.ServiceEIP.Account EIP.ServiceEIP.IServiceEIP.EndGetAccountByUserID(System.IAsyncResult result) {
            return base.Channel.EndGetAccountByUserID(result);
        }
        
        private System.IAsyncResult OnBeginGetAccountByUserID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long userID = ((long)(inValues[0]));
            return ((EIP.ServiceEIP.IServiceEIP)(this)).BeginGetAccountByUserID(userID, callback, asyncState);
        }
        
        private object[] OnEndGetAccountByUserID(System.IAsyncResult result) {
            EIP.ServiceEIP.Account retVal = ((EIP.ServiceEIP.IServiceEIP)(this)).EndGetAccountByUserID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAccountByUserIDCompleted(object state) {
            if ((this.GetAccountByUserIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAccountByUserIDCompleted(this, new GetAccountByUserIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAccountByUserIDAsync(long userID) {
            this.GetAccountByUserIDAsync(userID, null);
        }
        
        public void GetAccountByUserIDAsync(long userID, object userState) {
            if ((this.onBeginGetAccountByUserIDDelegate == null)) {
                this.onBeginGetAccountByUserIDDelegate = new BeginOperationDelegate(this.OnBeginGetAccountByUserID);
            }
            if ((this.onEndGetAccountByUserIDDelegate == null)) {
                this.onEndGetAccountByUserIDDelegate = new EndOperationDelegate(this.OnEndGetAccountByUserID);
            }
            if ((this.onGetAccountByUserIDCompletedDelegate == null)) {
                this.onGetAccountByUserIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAccountByUserIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetAccountByUserIDDelegate, new object[] {
                        userID}, this.onEndGetAccountByUserIDDelegate, this.onGetAccountByUserIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EIP.ServiceEIP.IServiceEIP.BeginGetAccountsByUserID(long userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAccountsByUserID(userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<EIP.ServiceEIP.Account> EIP.ServiceEIP.IServiceEIP.EndGetAccountsByUserID(System.IAsyncResult result) {
            return base.Channel.EndGetAccountsByUserID(result);
        }
        
        private System.IAsyncResult OnBeginGetAccountsByUserID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long userID = ((long)(inValues[0]));
            return ((EIP.ServiceEIP.IServiceEIP)(this)).BeginGetAccountsByUserID(userID, callback, asyncState);
        }
        
        private object[] OnEndGetAccountsByUserID(System.IAsyncResult result) {
            System.Collections.Generic.List<EIP.ServiceEIP.Account> retVal = ((EIP.ServiceEIP.IServiceEIP)(this)).EndGetAccountsByUserID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAccountsByUserIDCompleted(object state) {
            if ((this.GetAccountsByUserIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAccountsByUserIDCompleted(this, new GetAccountsByUserIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAccountsByUserIDAsync(long userID) {
            this.GetAccountsByUserIDAsync(userID, null);
        }
        
        public void GetAccountsByUserIDAsync(long userID, object userState) {
            if ((this.onBeginGetAccountsByUserIDDelegate == null)) {
                this.onBeginGetAccountsByUserIDDelegate = new BeginOperationDelegate(this.OnBeginGetAccountsByUserID);
            }
            if ((this.onEndGetAccountsByUserIDDelegate == null)) {
                this.onEndGetAccountsByUserIDDelegate = new EndOperationDelegate(this.OnEndGetAccountsByUserID);
            }
            if ((this.onGetAccountsByUserIDCompletedDelegate == null)) {
                this.onGetAccountsByUserIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAccountsByUserIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetAccountsByUserIDDelegate, new object[] {
                        userID}, this.onEndGetAccountsByUserIDDelegate, this.onGetAccountsByUserIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EIP.ServiceEIP.IServiceEIP.BeginGetAccountsByGroupID(long groupID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAccountsByGroupID(groupID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<EIP.ServiceEIP.Account> EIP.ServiceEIP.IServiceEIP.EndGetAccountsByGroupID(System.IAsyncResult result) {
            return base.Channel.EndGetAccountsByGroupID(result);
        }
        
        private System.IAsyncResult OnBeginGetAccountsByGroupID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long groupID = ((long)(inValues[0]));
            return ((EIP.ServiceEIP.IServiceEIP)(this)).BeginGetAccountsByGroupID(groupID, callback, asyncState);
        }
        
        private object[] OnEndGetAccountsByGroupID(System.IAsyncResult result) {
            System.Collections.Generic.List<EIP.ServiceEIP.Account> retVal = ((EIP.ServiceEIP.IServiceEIP)(this)).EndGetAccountsByGroupID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAccountsByGroupIDCompleted(object state) {
            if ((this.GetAccountsByGroupIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAccountsByGroupIDCompleted(this, new GetAccountsByGroupIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAccountsByGroupIDAsync(long groupID) {
            this.GetAccountsByGroupIDAsync(groupID, null);
        }
        
        public void GetAccountsByGroupIDAsync(long groupID, object userState) {
            if ((this.onBeginGetAccountsByGroupIDDelegate == null)) {
                this.onBeginGetAccountsByGroupIDDelegate = new BeginOperationDelegate(this.OnBeginGetAccountsByGroupID);
            }
            if ((this.onEndGetAccountsByGroupIDDelegate == null)) {
                this.onEndGetAccountsByGroupIDDelegate = new EndOperationDelegate(this.OnEndGetAccountsByGroupID);
            }
            if ((this.onGetAccountsByGroupIDCompletedDelegate == null)) {
                this.onGetAccountsByGroupIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAccountsByGroupIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetAccountsByGroupIDDelegate, new object[] {
                        groupID}, this.onEndGetAccountsByGroupIDDelegate, this.onGetAccountsByGroupIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EIP.ServiceEIP.IServiceEIP.BeginGetAccountsByTwitter(string pseudo, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAccountsByTwitter(pseudo, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<EIP.ServiceEIP.Account> EIP.ServiceEIP.IServiceEIP.EndGetAccountsByTwitter(System.IAsyncResult result) {
            return base.Channel.EndGetAccountsByTwitter(result);
        }
        
        private System.IAsyncResult OnBeginGetAccountsByTwitter(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string pseudo = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((EIP.ServiceEIP.IServiceEIP)(this)).BeginGetAccountsByTwitter(pseudo, password, callback, asyncState);
        }
        
        private object[] OnEndGetAccountsByTwitter(System.IAsyncResult result) {
            System.Collections.Generic.List<EIP.ServiceEIP.Account> retVal = ((EIP.ServiceEIP.IServiceEIP)(this)).EndGetAccountsByTwitter(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAccountsByTwitterCompleted(object state) {
            if ((this.GetAccountsByTwitterCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAccountsByTwitterCompleted(this, new GetAccountsByTwitterCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAccountsByTwitterAsync(string pseudo, string password) {
            this.GetAccountsByTwitterAsync(pseudo, password, null);
        }
        
        public void GetAccountsByTwitterAsync(string pseudo, string password, object userState) {
            if ((this.onBeginGetAccountsByTwitterDelegate == null)) {
                this.onBeginGetAccountsByTwitterDelegate = new BeginOperationDelegate(this.OnBeginGetAccountsByTwitter);
            }
            if ((this.onEndGetAccountsByTwitterDelegate == null)) {
                this.onEndGetAccountsByTwitterDelegate = new EndOperationDelegate(this.OnEndGetAccountsByTwitter);
            }
            if ((this.onGetAccountsByTwitterCompletedDelegate == null)) {
                this.onGetAccountsByTwitterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAccountsByTwitterCompleted);
            }
            base.InvokeAsync(this.onBeginGetAccountsByTwitterDelegate, new object[] {
                        pseudo,
                        password}, this.onEndGetAccountsByTwitterDelegate, this.onGetAccountsByTwitterCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EIP.ServiceEIP.IServiceEIP.BeginAddAccount(EIP.ServiceEIP.Account newAccount, string token, string pin, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddAccount(newAccount, token, pin, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool EIP.ServiceEIP.IServiceEIP.EndAddAccount(System.IAsyncResult result) {
            return base.Channel.EndAddAccount(result);
        }
        
        private System.IAsyncResult OnBeginAddAccount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            EIP.ServiceEIP.Account newAccount = ((EIP.ServiceEIP.Account)(inValues[0]));
            string token = ((string)(inValues[1]));
            string pin = ((string)(inValues[2]));
            return ((EIP.ServiceEIP.IServiceEIP)(this)).BeginAddAccount(newAccount, token, pin, callback, asyncState);
        }
        
        private object[] OnEndAddAccount(System.IAsyncResult result) {
            bool retVal = ((EIP.ServiceEIP.IServiceEIP)(this)).EndAddAccount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddAccountCompleted(object state) {
            if ((this.AddAccountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddAccountCompleted(this, new AddAccountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddAccountAsync(EIP.ServiceEIP.Account newAccount, string token, string pin) {
            this.AddAccountAsync(newAccount, token, pin, null);
        }
        
        public void AddAccountAsync(EIP.ServiceEIP.Account newAccount, string token, string pin, object userState) {
            if ((this.onBeginAddAccountDelegate == null)) {
                this.onBeginAddAccountDelegate = new BeginOperationDelegate(this.OnBeginAddAccount);
            }
            if ((this.onEndAddAccountDelegate == null)) {
                this.onEndAddAccountDelegate = new EndOperationDelegate(this.OnEndAddAccount);
            }
            if ((this.onAddAccountCompletedDelegate == null)) {
                this.onAddAccountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddAccountCompleted);
            }
            base.InvokeAsync(this.onBeginAddAccountDelegate, new object[] {
                        newAccount,
                        token,
                        pin}, this.onEndAddAccountDelegate, this.onAddAccountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EIP.ServiceEIP.IServiceEIP.BeginSaveAccount(EIP.ServiceEIP.Account accountToSave, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveAccount(accountToSave, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool EIP.ServiceEIP.IServiceEIP.EndSaveAccount(System.IAsyncResult result) {
            return base.Channel.EndSaveAccount(result);
        }
        
        private System.IAsyncResult OnBeginSaveAccount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            EIP.ServiceEIP.Account accountToSave = ((EIP.ServiceEIP.Account)(inValues[0]));
            return ((EIP.ServiceEIP.IServiceEIP)(this)).BeginSaveAccount(accountToSave, callback, asyncState);
        }
        
        private object[] OnEndSaveAccount(System.IAsyncResult result) {
            bool retVal = ((EIP.ServiceEIP.IServiceEIP)(this)).EndSaveAccount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveAccountCompleted(object state) {
            if ((this.SaveAccountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveAccountCompleted(this, new SaveAccountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveAccountAsync(EIP.ServiceEIP.Account accountToSave) {
            this.SaveAccountAsync(accountToSave, null);
        }
        
        public void SaveAccountAsync(EIP.ServiceEIP.Account accountToSave, object userState) {
            if ((this.onBeginSaveAccountDelegate == null)) {
                this.onBeginSaveAccountDelegate = new BeginOperationDelegate(this.OnBeginSaveAccount);
            }
            if ((this.onEndSaveAccountDelegate == null)) {
                this.onEndSaveAccountDelegate = new EndOperationDelegate(this.OnEndSaveAccount);
            }
            if ((this.onSaveAccountCompletedDelegate == null)) {
                this.onSaveAccountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveAccountCompleted);
            }
            base.InvokeAsync(this.onBeginSaveAccountDelegate, new object[] {
                        accountToSave}, this.onEndSaveAccountDelegate, this.onSaveAccountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EIP.ServiceEIP.IServiceEIP.BeginDeleteAccount(long accountID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteAccount(accountID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        long EIP.ServiceEIP.IServiceEIP.EndDeleteAccount(System.IAsyncResult result) {
            return base.Channel.EndDeleteAccount(result);
        }
        
        private System.IAsyncResult OnBeginDeleteAccount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long accountID = ((long)(inValues[0]));
            return ((EIP.ServiceEIP.IServiceEIP)(this)).BeginDeleteAccount(accountID, callback, asyncState);
        }
        
        private object[] OnEndDeleteAccount(System.IAsyncResult result) {
            long retVal = ((EIP.ServiceEIP.IServiceEIP)(this)).EndDeleteAccount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteAccountCompleted(object state) {
            if ((this.DeleteAccountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteAccountCompleted(this, new DeleteAccountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteAccountAsync(long accountID) {
            this.DeleteAccountAsync(accountID, null);
        }
        
        public void DeleteAccountAsync(long accountID, object userState) {
            if ((this.onBeginDeleteAccountDelegate == null)) {
                this.onBeginDeleteAccountDelegate = new BeginOperationDelegate(this.OnBeginDeleteAccount);
            }
            if ((this.onEndDeleteAccountDelegate == null)) {
                this.onEndDeleteAccountDelegate = new EndOperationDelegate(this.OnEndDeleteAccount);
            }
            if ((this.onDeleteAccountCompletedDelegate == null)) {
                this.onDeleteAccountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteAccountCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteAccountDelegate, new object[] {
                        accountID}, this.onEndDeleteAccountDelegate, this.onDeleteAccountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EIP.ServiceEIP.IServiceEIP.Begintestfb(System.AsyncCallback callback, object asyncState) {
            return base.Channel.Begintestfb(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EIP.ServiceEIP.AccountFacebook EIP.ServiceEIP.IServiceEIP.Endtestfb(System.IAsyncResult result) {
            return base.Channel.Endtestfb(result);
        }
        
        private System.IAsyncResult OnBegintestfb(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((EIP.ServiceEIP.IServiceEIP)(this)).Begintestfb(callback, asyncState);
        }
        
        private object[] OnEndtestfb(System.IAsyncResult result) {
            EIP.ServiceEIP.AccountFacebook retVal = ((EIP.ServiceEIP.IServiceEIP)(this)).Endtestfb(result);
            return new object[] {
                    retVal};
        }
        
        private void OntestfbCompleted(object state) {
            if ((this.testfbCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.testfbCompleted(this, new testfbCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void testfbAsync() {
            this.testfbAsync(null);
        }
        
        public void testfbAsync(object userState) {
            if ((this.onBegintestfbDelegate == null)) {
                this.onBegintestfbDelegate = new BeginOperationDelegate(this.OnBegintestfb);
            }
            if ((this.onEndtestfbDelegate == null)) {
                this.onEndtestfbDelegate = new EndOperationDelegate(this.OnEndtestfb);
            }
            if ((this.ontestfbCompletedDelegate == null)) {
                this.ontestfbCompletedDelegate = new System.Threading.SendOrPostCallback(this.OntestfbCompleted);
            }
            base.InvokeAsync(this.onBegintestfbDelegate, null, this.onEndtestfbDelegate, this.ontestfbCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EIP.ServiceEIP.IServiceEIP.BegintestT(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegintestT(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EIP.ServiceEIP.AccountTwitter EIP.ServiceEIP.IServiceEIP.EndtestT(System.IAsyncResult result) {
            return base.Channel.EndtestT(result);
        }
        
        private System.IAsyncResult OnBegintestT(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((EIP.ServiceEIP.IServiceEIP)(this)).BegintestT(callback, asyncState);
        }
        
        private object[] OnEndtestT(System.IAsyncResult result) {
            EIP.ServiceEIP.AccountTwitter retVal = ((EIP.ServiceEIP.IServiceEIP)(this)).EndtestT(result);
            return new object[] {
                    retVal};
        }
        
        private void OntestTCompleted(object state) {
            if ((this.testTCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.testTCompleted(this, new testTCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void testTAsync() {
            this.testTAsync(null);
        }
        
        public void testTAsync(object userState) {
            if ((this.onBegintestTDelegate == null)) {
                this.onBegintestTDelegate = new BeginOperationDelegate(this.OnBegintestT);
            }
            if ((this.onEndtestTDelegate == null)) {
                this.onEndtestTDelegate = new EndOperationDelegate(this.OnEndtestT);
            }
            if ((this.ontestTCompletedDelegate == null)) {
                this.ontestTCompletedDelegate = new System.Threading.SendOrPostCallback(this.OntestTCompleted);
            }
            base.InvokeAsync(this.onBegintestTDelegate, null, this.onEndtestTDelegate, this.ontestTCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EIP.ServiceEIP.IServiceEIP.BeginGetRequestToken(string consumerKey, string consumerSecret, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRequestToken(consumerKey, consumerSecret, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string EIP.ServiceEIP.IServiceEIP.EndGetRequestToken(System.IAsyncResult result) {
            return base.Channel.EndGetRequestToken(result);
        }
        
        private System.IAsyncResult OnBeginGetRequestToken(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string consumerKey = ((string)(inValues[0]));
            string consumerSecret = ((string)(inValues[1]));
            return ((EIP.ServiceEIP.IServiceEIP)(this)).BeginGetRequestToken(consumerKey, consumerSecret, callback, asyncState);
        }
        
        private object[] OnEndGetRequestToken(System.IAsyncResult result) {
            string retVal = ((EIP.ServiceEIP.IServiceEIP)(this)).EndGetRequestToken(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRequestTokenCompleted(object state) {
            if ((this.GetRequestTokenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRequestTokenCompleted(this, new GetRequestTokenCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRequestTokenAsync(string consumerKey, string consumerSecret) {
            this.GetRequestTokenAsync(consumerKey, consumerSecret, null);
        }
        
        public void GetRequestTokenAsync(string consumerKey, string consumerSecret, object userState) {
            if ((this.onBeginGetRequestTokenDelegate == null)) {
                this.onBeginGetRequestTokenDelegate = new BeginOperationDelegate(this.OnBeginGetRequestToken);
            }
            if ((this.onEndGetRequestTokenDelegate == null)) {
                this.onEndGetRequestTokenDelegate = new EndOperationDelegate(this.OnEndGetRequestToken);
            }
            if ((this.onGetRequestTokenCompletedDelegate == null)) {
                this.onGetRequestTokenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRequestTokenCompleted);
            }
            base.InvokeAsync(this.onBeginGetRequestTokenDelegate, new object[] {
                        consumerKey,
                        consumerSecret}, this.onEndGetRequestTokenDelegate, this.onGetRequestTokenCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EIP.ServiceEIP.IServiceEIP.BeginLoadHomeStatuses(string token, string tokenSecret, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadHomeStatuses(token, tokenSecret, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<EIP.ServiceEIP.TwitterStatus> EIP.ServiceEIP.IServiceEIP.EndLoadHomeStatuses(System.IAsyncResult result) {
            return base.Channel.EndLoadHomeStatuses(result);
        }
        
        private System.IAsyncResult OnBeginLoadHomeStatuses(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string tokenSecret = ((string)(inValues[1]));
            return ((EIP.ServiceEIP.IServiceEIP)(this)).BeginLoadHomeStatuses(token, tokenSecret, callback, asyncState);
        }
        
        private object[] OnEndLoadHomeStatuses(System.IAsyncResult result) {
            System.Collections.Generic.List<EIP.ServiceEIP.TwitterStatus> retVal = ((EIP.ServiceEIP.IServiceEIP)(this)).EndLoadHomeStatuses(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadHomeStatusesCompleted(object state) {
            if ((this.LoadHomeStatusesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadHomeStatusesCompleted(this, new LoadHomeStatusesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadHomeStatusesAsync(string token, string tokenSecret) {
            this.LoadHomeStatusesAsync(token, tokenSecret, null);
        }
        
        public void LoadHomeStatusesAsync(string token, string tokenSecret, object userState) {
            if ((this.onBeginLoadHomeStatusesDelegate == null)) {
                this.onBeginLoadHomeStatusesDelegate = new BeginOperationDelegate(this.OnBeginLoadHomeStatuses);
            }
            if ((this.onEndLoadHomeStatusesDelegate == null)) {
                this.onEndLoadHomeStatusesDelegate = new EndOperationDelegate(this.OnEndLoadHomeStatuses);
            }
            if ((this.onLoadHomeStatusesCompletedDelegate == null)) {
                this.onLoadHomeStatusesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadHomeStatusesCompleted);
            }
            base.InvokeAsync(this.onBeginLoadHomeStatusesDelegate, new object[] {
                        token,
                        tokenSecret}, this.onEndLoadHomeStatusesDelegate, this.onLoadHomeStatusesCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override EIP.ServiceEIP.IServiceEIP CreateChannel() {
            return new ServiceEIPClientChannel(this);
        }
        
        private class ServiceEIPClientChannel : ChannelBase<EIP.ServiceEIP.IServiceEIP>, EIP.ServiceEIP.IServiceEIP {
            
            public ServiceEIPClientChannel(System.ServiceModel.ClientBase<EIP.ServiceEIP.IServiceEIP> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginIsUp(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("IsUp", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndIsUp(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("IsUp", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAccountByUserID(long userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userID;
                System.IAsyncResult _result = base.BeginInvoke("GetAccountByUserID", _args, callback, asyncState);
                return _result;
            }
            
            public EIP.ServiceEIP.Account EndGetAccountByUserID(System.IAsyncResult result) {
                object[] _args = new object[0];
                EIP.ServiceEIP.Account _result = ((EIP.ServiceEIP.Account)(base.EndInvoke("GetAccountByUserID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAccountsByUserID(long userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userID;
                System.IAsyncResult _result = base.BeginInvoke("GetAccountsByUserID", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<EIP.ServiceEIP.Account> EndGetAccountsByUserID(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<EIP.ServiceEIP.Account> _result = ((System.Collections.Generic.List<EIP.ServiceEIP.Account>)(base.EndInvoke("GetAccountsByUserID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAccountsByGroupID(long groupID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = groupID;
                System.IAsyncResult _result = base.BeginInvoke("GetAccountsByGroupID", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<EIP.ServiceEIP.Account> EndGetAccountsByGroupID(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<EIP.ServiceEIP.Account> _result = ((System.Collections.Generic.List<EIP.ServiceEIP.Account>)(base.EndInvoke("GetAccountsByGroupID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAccountsByTwitter(string pseudo, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = pseudo;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("GetAccountsByTwitter", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<EIP.ServiceEIP.Account> EndGetAccountsByTwitter(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<EIP.ServiceEIP.Account> _result = ((System.Collections.Generic.List<EIP.ServiceEIP.Account>)(base.EndInvoke("GetAccountsByTwitter", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddAccount(EIP.ServiceEIP.Account newAccount, string token, string pin, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = newAccount;
                _args[1] = token;
                _args[2] = pin;
                System.IAsyncResult _result = base.BeginInvoke("AddAccount", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAddAccount(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AddAccount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveAccount(EIP.ServiceEIP.Account accountToSave, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = accountToSave;
                System.IAsyncResult _result = base.BeginInvoke("SaveAccount", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSaveAccount(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("SaveAccount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteAccount(long accountID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = accountID;
                System.IAsyncResult _result = base.BeginInvoke("DeleteAccount", _args, callback, asyncState);
                return _result;
            }
            
            public long EndDeleteAccount(System.IAsyncResult result) {
                object[] _args = new object[0];
                long _result = ((long)(base.EndInvoke("DeleteAccount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult Begintestfb(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("testfb", _args, callback, asyncState);
                return _result;
            }
            
            public EIP.ServiceEIP.AccountFacebook Endtestfb(System.IAsyncResult result) {
                object[] _args = new object[0];
                EIP.ServiceEIP.AccountFacebook _result = ((EIP.ServiceEIP.AccountFacebook)(base.EndInvoke("testfb", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegintestT(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("testT", _args, callback, asyncState);
                return _result;
            }
            
            public EIP.ServiceEIP.AccountTwitter EndtestT(System.IAsyncResult result) {
                object[] _args = new object[0];
                EIP.ServiceEIP.AccountTwitter _result = ((EIP.ServiceEIP.AccountTwitter)(base.EndInvoke("testT", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRequestToken(string consumerKey, string consumerSecret, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = consumerKey;
                _args[1] = consumerSecret;
                System.IAsyncResult _result = base.BeginInvoke("GetRequestToken", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetRequestToken(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetRequestToken", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLoadHomeStatuses(string token, string tokenSecret, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = tokenSecret;
                System.IAsyncResult _result = base.BeginInvoke("LoadHomeStatuses", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<EIP.ServiceEIP.TwitterStatus> EndLoadHomeStatuses(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<EIP.ServiceEIP.TwitterStatus> _result = ((System.Collections.Generic.List<EIP.ServiceEIP.TwitterStatus>)(base.EndInvoke("LoadHomeStatuses", _args, result)));
                return _result;
            }
        }
    }
}
