//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.21006.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.41108.0
// 
namespace EIP.ServiceEIP {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Account", Namespace="http://schemas.datacontract.org/2004/07/EIP")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EIP.ServiceEIP.AccountTwitter))]
    public partial class Account : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long accountIDField;
        
        private string nameField;
        
        private EIP.ServiceEIP.Account.TypeAccount typeAccountField;
        
        private long userIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long accountID {
            get {
                return this.accountIDField;
            }
            set {
                if ((this.accountIDField.Equals(value) != true)) {
                    this.accountIDField = value;
                    this.RaisePropertyChanged("accountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EIP.ServiceEIP.Account.TypeAccount typeAccount {
            get {
                return this.typeAccountField;
            }
            set {
                if ((this.typeAccountField.Equals(value) != true)) {
                    this.typeAccountField = value;
                    this.RaisePropertyChanged("typeAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long userID {
            get {
                return this.userIDField;
            }
            set {
                if ((this.userIDField.Equals(value) != true)) {
                    this.userIDField = value;
                    this.RaisePropertyChanged("userID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Account.TypeAccount", Namespace="http://schemas.datacontract.org/2004/07/EIP")]
        public enum TypeAccount : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Facebook = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Twitter = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Myspace = 2,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountTwitter", Namespace="http://schemas.datacontract.org/2004/07/EIP")]
    public partial class AccountTwitter : EIP.ServiceEIP.Account {
        
        private string pinField;
        
        private string tokenField;
        
        private string tokenSecretField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string pin {
            get {
                return this.pinField;
            }
            set {
                if ((object.ReferenceEquals(this.pinField, value) != true)) {
                    this.pinField = value;
                    this.RaisePropertyChanged("pin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string token {
            get {
                return this.tokenField;
            }
            set {
                if ((object.ReferenceEquals(this.tokenField, value) != true)) {
                    this.tokenField = value;
                    this.RaisePropertyChanged("token");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string tokenSecret {
            get {
                return this.tokenSecretField;
            }
            set {
                if ((object.ReferenceEquals(this.tokenSecretField, value) != true)) {
                    this.tokenSecretField = value;
                    this.RaisePropertyChanged("tokenSecret");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PropertyChangedBase", Namespace="http://schemas.datacontract.org/2004/07/Dimebrain.TweetSharp.Model")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EIP.ServiceEIP.TwitterStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EIP.ServiceEIP.TwitterUser))]
    public partial class PropertyChangedBase : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TwitterStatus", Namespace="http://schemas.datacontract.org/2004/07/Dimebrain.TweetSharp.Model")]
    public partial class TwitterStatus : EIP.ServiceEIP.PropertyChangedBase {
        
        private System.DateTime CreatedDateField;
        
        private long IdField;
        
        private string InReplyToScreenNameField;
        
        private System.Nullable<long> InReplyToStatusIdField;
        
        private System.Nullable<int> InReplyToUserIdField;
        
        private bool IsFavoritedField;
        
        private bool IsTruncatedField;
        
        private System.Nullable<EIP.ServiceEIP.GeoLocation> LocationField;
        
        private EIP.ServiceEIP.TwitterStatus RetweetedStatusField;
        
        private string SourceField;
        
        private string TextField;
        
        private EIP.ServiceEIP.TwitterUser UserField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InReplyToScreenName {
            get {
                return this.InReplyToScreenNameField;
            }
            set {
                if ((object.ReferenceEquals(this.InReplyToScreenNameField, value) != true)) {
                    this.InReplyToScreenNameField = value;
                    this.RaisePropertyChanged("InReplyToScreenName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> InReplyToStatusId {
            get {
                return this.InReplyToStatusIdField;
            }
            set {
                if ((this.InReplyToStatusIdField.Equals(value) != true)) {
                    this.InReplyToStatusIdField = value;
                    this.RaisePropertyChanged("InReplyToStatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> InReplyToUserId {
            get {
                return this.InReplyToUserIdField;
            }
            set {
                if ((this.InReplyToUserIdField.Equals(value) != true)) {
                    this.InReplyToUserIdField = value;
                    this.RaisePropertyChanged("InReplyToUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFavorited {
            get {
                return this.IsFavoritedField;
            }
            set {
                if ((this.IsFavoritedField.Equals(value) != true)) {
                    this.IsFavoritedField = value;
                    this.RaisePropertyChanged("IsFavorited");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTruncated {
            get {
                return this.IsTruncatedField;
            }
            set {
                if ((this.IsTruncatedField.Equals(value) != true)) {
                    this.IsTruncatedField = value;
                    this.RaisePropertyChanged("IsTruncated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EIP.ServiceEIP.GeoLocation> Location {
            get {
                return this.LocationField;
            }
            set {
                if ((this.LocationField.Equals(value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EIP.ServiceEIP.TwitterStatus RetweetedStatus {
            get {
                return this.RetweetedStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.RetweetedStatusField, value) != true)) {
                    this.RetweetedStatusField = value;
                    this.RaisePropertyChanged("RetweetedStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EIP.ServiceEIP.TwitterUser User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TwitterUser", Namespace="http://schemas.datacontract.org/2004/07/Dimebrain.TweetSharp.Model")]
    public partial class TwitterUser : EIP.ServiceEIP.PropertyChangedBase {
        
        private System.DateTime CreatedDateField;
        
        private string DescriptionField;
        
        private int FavouritesCountField;
        
        private int FollowersCountField;
        
        private int FriendsCountField;
        
        private System.Nullable<bool> HasNotificationsField;
        
        private int IdField;
        
        private System.Nullable<bool> IsFollowingField;
        
        private System.Nullable<bool> IsGeoEnabledField;
        
        private bool IsProfileBackgroundTiledField;
        
        private System.Nullable<bool> IsProtectedField;
        
        private System.Nullable<bool> IsVerifiedField;
        
        private string LanguageField;
        
        private string LocationField;
        
        private string NameField;
        
        private string ProfileBackgroundColorField;
        
        private string ProfileBackgroundImageUrlField;
        
        private string ProfileImageUrlField;
        
        private string ProfileLinkColorField;
        
        private string ProfileSidebarBorderColorField;
        
        private string ProfileSidebarFillColorField;
        
        private string ProfileTextColorField;
        
        private string ScreenNameField;
        
        private EIP.ServiceEIP.TwitterStatus StatusField;
        
        private int StatusesCountField;
        
        private string TimeZoneField;
        
        private string UrlField;
        
        private string UtcOffsetField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FavouritesCount {
            get {
                return this.FavouritesCountField;
            }
            set {
                if ((this.FavouritesCountField.Equals(value) != true)) {
                    this.FavouritesCountField = value;
                    this.RaisePropertyChanged("FavouritesCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FollowersCount {
            get {
                return this.FollowersCountField;
            }
            set {
                if ((this.FollowersCountField.Equals(value) != true)) {
                    this.FollowersCountField = value;
                    this.RaisePropertyChanged("FollowersCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FriendsCount {
            get {
                return this.FriendsCountField;
            }
            set {
                if ((this.FriendsCountField.Equals(value) != true)) {
                    this.FriendsCountField = value;
                    this.RaisePropertyChanged("FriendsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> HasNotifications {
            get {
                return this.HasNotificationsField;
            }
            set {
                if ((this.HasNotificationsField.Equals(value) != true)) {
                    this.HasNotificationsField = value;
                    this.RaisePropertyChanged("HasNotifications");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsFollowing {
            get {
                return this.IsFollowingField;
            }
            set {
                if ((this.IsFollowingField.Equals(value) != true)) {
                    this.IsFollowingField = value;
                    this.RaisePropertyChanged("IsFollowing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsGeoEnabled {
            get {
                return this.IsGeoEnabledField;
            }
            set {
                if ((this.IsGeoEnabledField.Equals(value) != true)) {
                    this.IsGeoEnabledField = value;
                    this.RaisePropertyChanged("IsGeoEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsProfileBackgroundTiled {
            get {
                return this.IsProfileBackgroundTiledField;
            }
            set {
                if ((this.IsProfileBackgroundTiledField.Equals(value) != true)) {
                    this.IsProfileBackgroundTiledField = value;
                    this.RaisePropertyChanged("IsProfileBackgroundTiled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsProtected {
            get {
                return this.IsProtectedField;
            }
            set {
                if ((this.IsProtectedField.Equals(value) != true)) {
                    this.IsProtectedField = value;
                    this.RaisePropertyChanged("IsProtected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsVerified {
            get {
                return this.IsVerifiedField;
            }
            set {
                if ((this.IsVerifiedField.Equals(value) != true)) {
                    this.IsVerifiedField = value;
                    this.RaisePropertyChanged("IsVerified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfileBackgroundColor {
            get {
                return this.ProfileBackgroundColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileBackgroundColorField, value) != true)) {
                    this.ProfileBackgroundColorField = value;
                    this.RaisePropertyChanged("ProfileBackgroundColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfileBackgroundImageUrl {
            get {
                return this.ProfileBackgroundImageUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileBackgroundImageUrlField, value) != true)) {
                    this.ProfileBackgroundImageUrlField = value;
                    this.RaisePropertyChanged("ProfileBackgroundImageUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfileImageUrl {
            get {
                return this.ProfileImageUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileImageUrlField, value) != true)) {
                    this.ProfileImageUrlField = value;
                    this.RaisePropertyChanged("ProfileImageUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfileLinkColor {
            get {
                return this.ProfileLinkColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileLinkColorField, value) != true)) {
                    this.ProfileLinkColorField = value;
                    this.RaisePropertyChanged("ProfileLinkColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfileSidebarBorderColor {
            get {
                return this.ProfileSidebarBorderColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileSidebarBorderColorField, value) != true)) {
                    this.ProfileSidebarBorderColorField = value;
                    this.RaisePropertyChanged("ProfileSidebarBorderColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfileSidebarFillColor {
            get {
                return this.ProfileSidebarFillColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileSidebarFillColorField, value) != true)) {
                    this.ProfileSidebarFillColorField = value;
                    this.RaisePropertyChanged("ProfileSidebarFillColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfileTextColor {
            get {
                return this.ProfileTextColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileTextColorField, value) != true)) {
                    this.ProfileTextColorField = value;
                    this.RaisePropertyChanged("ProfileTextColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScreenName {
            get {
                return this.ScreenNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ScreenNameField, value) != true)) {
                    this.ScreenNameField = value;
                    this.RaisePropertyChanged("ScreenName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EIP.ServiceEIP.TwitterStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusesCount {
            get {
                return this.StatusesCountField;
            }
            set {
                if ((this.StatusesCountField.Equals(value) != true)) {
                    this.StatusesCountField = value;
                    this.RaisePropertyChanged("StatusesCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeZone {
            get {
                return this.TimeZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeZoneField, value) != true)) {
                    this.TimeZoneField = value;
                    this.RaisePropertyChanged("TimeZone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UtcOffset {
            get {
                return this.UtcOffsetField;
            }
            set {
                if ((object.ReferenceEquals(this.UtcOffsetField, value) != true)) {
                    this.UtcOffsetField = value;
                    this.RaisePropertyChanged("UtcOffset");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeoLocation", Namespace="http://schemas.datacontract.org/2004/07/Dimebrain.TweetSharp.Model")]
    public partial struct GeoLocation : System.ComponentModel.INotifyPropertyChanged {
        
        private double Latitudek__BackingFieldField;
        
        private double Longitudek__BackingFieldField;
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Latitude>k__BackingField", IsRequired=true)]
        public double Latitudek__BackingField {
            get {
                return this.Latitudek__BackingFieldField;
            }
            set {
                if ((this.Latitudek__BackingFieldField.Equals(value) != true)) {
                    this.Latitudek__BackingFieldField = value;
                    this.RaisePropertyChanged("Latitudek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Longitude>k__BackingField", IsRequired=true)]
        public double Longitudek__BackingField {
            get {
                return this.Longitudek__BackingFieldField;
            }
            set {
                if ((this.Longitudek__BackingFieldField.Equals(value) != true)) {
                    this.Longitudek__BackingFieldField = value;
                    this.RaisePropertyChanged("Longitudek__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceEIP.IServiceEIP")]
    public interface IServiceEIP {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceEIP/AuthorizeDesktop", ReplyAction="http://tempuri.org/IServiceEIP/AuthorizeDesktopResponse")]
        System.IAsyncResult BeginAuthorizeDesktop(string consumerKey, string consumerSecret, System.AsyncCallback callback, object asyncState);
        
        string EndAuthorizeDesktop(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceEIP/GetAccessToken", ReplyAction="http://tempuri.org/IServiceEIP/GetAccessTokenResponse")]
        System.IAsyncResult BeginGetAccessToken(string consumerKey, string consumerSecret, string token, string pin, System.AsyncCallback callback, object asyncState);
        
        EIP.ServiceEIP.AccountTwitter EndGetAccessToken(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceEIP/TwitterGetUserInfo", ReplyAction="http://tempuri.org/IServiceEIP/TwitterGetUserInfoResponse")]
        System.IAsyncResult BeginTwitterGetUserInfo(string consumerKey, string consumerSecret, string token, string tokenSecret, long userId, System.AsyncCallback callback, object asyncState);
        
        EIP.ServiceEIP.TwitterUser EndTwitterGetUserInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceEIP/TwitterGetHomeStatuses", ReplyAction="http://tempuri.org/IServiceEIP/TwitterGetHomeStatusesResponse")]
        System.IAsyncResult BeginTwitterGetHomeStatuses(string consumerKey, string consumerSecret, string token, string tokenSecret, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<EIP.ServiceEIP.TwitterStatus> EndTwitterGetHomeStatuses(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceEIP/GetFluent", ReplyAction="http://tempuri.org/IServiceEIP/GetFluentResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EIP.ServiceEIP.TwitterUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EIP.ServiceEIP.PropertyChangedBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EIP.ServiceEIP.TwitterStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EIP.ServiceEIP.GeoLocation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<EIP.ServiceEIP.TwitterStatus>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EIP.ServiceEIP.AccountTwitter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EIP.ServiceEIP.Account))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EIP.ServiceEIP.Account.TypeAccount))]
        System.IAsyncResult BeginGetFluent(System.AsyncCallback callback, object asyncState);
        
        object EndGetFluent(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceEIPChannel : EIP.ServiceEIP.IServiceEIP, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthorizeDesktopCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AuthorizeDesktopCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAccessTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAccessTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EIP.ServiceEIP.AccountTwitter Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EIP.ServiceEIP.AccountTwitter)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TwitterGetUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public TwitterGetUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EIP.ServiceEIP.TwitterUser Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EIP.ServiceEIP.TwitterUser)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TwitterGetHomeStatusesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public TwitterGetHomeStatusesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<EIP.ServiceEIP.TwitterStatus> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<EIP.ServiceEIP.TwitterStatus>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFluentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFluentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public object Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceEIPClient : System.ServiceModel.ClientBase<EIP.ServiceEIP.IServiceEIP>, EIP.ServiceEIP.IServiceEIP {
        
        private BeginOperationDelegate onBeginAuthorizeDesktopDelegate;
        
        private EndOperationDelegate onEndAuthorizeDesktopDelegate;
        
        private System.Threading.SendOrPostCallback onAuthorizeDesktopCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAccessTokenDelegate;
        
        private EndOperationDelegate onEndGetAccessTokenDelegate;
        
        private System.Threading.SendOrPostCallback onGetAccessTokenCompletedDelegate;
        
        private BeginOperationDelegate onBeginTwitterGetUserInfoDelegate;
        
        private EndOperationDelegate onEndTwitterGetUserInfoDelegate;
        
        private System.Threading.SendOrPostCallback onTwitterGetUserInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginTwitterGetHomeStatusesDelegate;
        
        private EndOperationDelegate onEndTwitterGetHomeStatusesDelegate;
        
        private System.Threading.SendOrPostCallback onTwitterGetHomeStatusesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFluentDelegate;
        
        private EndOperationDelegate onEndGetFluentDelegate;
        
        private System.Threading.SendOrPostCallback onGetFluentCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ServiceEIPClient() {
        }
        
        public ServiceEIPClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceEIPClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceEIPClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceEIPClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<AuthorizeDesktopCompletedEventArgs> AuthorizeDesktopCompleted;
        
        public event System.EventHandler<GetAccessTokenCompletedEventArgs> GetAccessTokenCompleted;
        
        public event System.EventHandler<TwitterGetUserInfoCompletedEventArgs> TwitterGetUserInfoCompleted;
        
        public event System.EventHandler<TwitterGetHomeStatusesCompletedEventArgs> TwitterGetHomeStatusesCompleted;
        
        public event System.EventHandler<GetFluentCompletedEventArgs> GetFluentCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EIP.ServiceEIP.IServiceEIP.BeginAuthorizeDesktop(string consumerKey, string consumerSecret, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAuthorizeDesktop(consumerKey, consumerSecret, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string EIP.ServiceEIP.IServiceEIP.EndAuthorizeDesktop(System.IAsyncResult result) {
            return base.Channel.EndAuthorizeDesktop(result);
        }
        
        private System.IAsyncResult OnBeginAuthorizeDesktop(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string consumerKey = ((string)(inValues[0]));
            string consumerSecret = ((string)(inValues[1]));
            return ((EIP.ServiceEIP.IServiceEIP)(this)).BeginAuthorizeDesktop(consumerKey, consumerSecret, callback, asyncState);
        }
        
        private object[] OnEndAuthorizeDesktop(System.IAsyncResult result) {
            string retVal = ((EIP.ServiceEIP.IServiceEIP)(this)).EndAuthorizeDesktop(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAuthorizeDesktopCompleted(object state) {
            if ((this.AuthorizeDesktopCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AuthorizeDesktopCompleted(this, new AuthorizeDesktopCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AuthorizeDesktopAsync(string consumerKey, string consumerSecret) {
            this.AuthorizeDesktopAsync(consumerKey, consumerSecret, null);
        }
        
        public void AuthorizeDesktopAsync(string consumerKey, string consumerSecret, object userState) {
            if ((this.onBeginAuthorizeDesktopDelegate == null)) {
                this.onBeginAuthorizeDesktopDelegate = new BeginOperationDelegate(this.OnBeginAuthorizeDesktop);
            }
            if ((this.onEndAuthorizeDesktopDelegate == null)) {
                this.onEndAuthorizeDesktopDelegate = new EndOperationDelegate(this.OnEndAuthorizeDesktop);
            }
            if ((this.onAuthorizeDesktopCompletedDelegate == null)) {
                this.onAuthorizeDesktopCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAuthorizeDesktopCompleted);
            }
            base.InvokeAsync(this.onBeginAuthorizeDesktopDelegate, new object[] {
                        consumerKey,
                        consumerSecret}, this.onEndAuthorizeDesktopDelegate, this.onAuthorizeDesktopCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EIP.ServiceEIP.IServiceEIP.BeginGetAccessToken(string consumerKey, string consumerSecret, string token, string pin, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAccessToken(consumerKey, consumerSecret, token, pin, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EIP.ServiceEIP.AccountTwitter EIP.ServiceEIP.IServiceEIP.EndGetAccessToken(System.IAsyncResult result) {
            return base.Channel.EndGetAccessToken(result);
        }
        
        private System.IAsyncResult OnBeginGetAccessToken(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string consumerKey = ((string)(inValues[0]));
            string consumerSecret = ((string)(inValues[1]));
            string token = ((string)(inValues[2]));
            string pin = ((string)(inValues[3]));
            return ((EIP.ServiceEIP.IServiceEIP)(this)).BeginGetAccessToken(consumerKey, consumerSecret, token, pin, callback, asyncState);
        }
        
        private object[] OnEndGetAccessToken(System.IAsyncResult result) {
            EIP.ServiceEIP.AccountTwitter retVal = ((EIP.ServiceEIP.IServiceEIP)(this)).EndGetAccessToken(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAccessTokenCompleted(object state) {
            if ((this.GetAccessTokenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAccessTokenCompleted(this, new GetAccessTokenCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAccessTokenAsync(string consumerKey, string consumerSecret, string token, string pin) {
            this.GetAccessTokenAsync(consumerKey, consumerSecret, token, pin, null);
        }
        
        public void GetAccessTokenAsync(string consumerKey, string consumerSecret, string token, string pin, object userState) {
            if ((this.onBeginGetAccessTokenDelegate == null)) {
                this.onBeginGetAccessTokenDelegate = new BeginOperationDelegate(this.OnBeginGetAccessToken);
            }
            if ((this.onEndGetAccessTokenDelegate == null)) {
                this.onEndGetAccessTokenDelegate = new EndOperationDelegate(this.OnEndGetAccessToken);
            }
            if ((this.onGetAccessTokenCompletedDelegate == null)) {
                this.onGetAccessTokenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAccessTokenCompleted);
            }
            base.InvokeAsync(this.onBeginGetAccessTokenDelegate, new object[] {
                        consumerKey,
                        consumerSecret,
                        token,
                        pin}, this.onEndGetAccessTokenDelegate, this.onGetAccessTokenCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EIP.ServiceEIP.IServiceEIP.BeginTwitterGetUserInfo(string consumerKey, string consumerSecret, string token, string tokenSecret, long userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTwitterGetUserInfo(consumerKey, consumerSecret, token, tokenSecret, userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EIP.ServiceEIP.TwitterUser EIP.ServiceEIP.IServiceEIP.EndTwitterGetUserInfo(System.IAsyncResult result) {
            return base.Channel.EndTwitterGetUserInfo(result);
        }
        
        private System.IAsyncResult OnBeginTwitterGetUserInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string consumerKey = ((string)(inValues[0]));
            string consumerSecret = ((string)(inValues[1]));
            string token = ((string)(inValues[2]));
            string tokenSecret = ((string)(inValues[3]));
            long userId = ((long)(inValues[4]));
            return ((EIP.ServiceEIP.IServiceEIP)(this)).BeginTwitterGetUserInfo(consumerKey, consumerSecret, token, tokenSecret, userId, callback, asyncState);
        }
        
        private object[] OnEndTwitterGetUserInfo(System.IAsyncResult result) {
            EIP.ServiceEIP.TwitterUser retVal = ((EIP.ServiceEIP.IServiceEIP)(this)).EndTwitterGetUserInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnTwitterGetUserInfoCompleted(object state) {
            if ((this.TwitterGetUserInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TwitterGetUserInfoCompleted(this, new TwitterGetUserInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TwitterGetUserInfoAsync(string consumerKey, string consumerSecret, string token, string tokenSecret, long userId) {
            this.TwitterGetUserInfoAsync(consumerKey, consumerSecret, token, tokenSecret, userId, null);
        }
        
        public void TwitterGetUserInfoAsync(string consumerKey, string consumerSecret, string token, string tokenSecret, long userId, object userState) {
            if ((this.onBeginTwitterGetUserInfoDelegate == null)) {
                this.onBeginTwitterGetUserInfoDelegate = new BeginOperationDelegate(this.OnBeginTwitterGetUserInfo);
            }
            if ((this.onEndTwitterGetUserInfoDelegate == null)) {
                this.onEndTwitterGetUserInfoDelegate = new EndOperationDelegate(this.OnEndTwitterGetUserInfo);
            }
            if ((this.onTwitterGetUserInfoCompletedDelegate == null)) {
                this.onTwitterGetUserInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTwitterGetUserInfoCompleted);
            }
            base.InvokeAsync(this.onBeginTwitterGetUserInfoDelegate, new object[] {
                        consumerKey,
                        consumerSecret,
                        token,
                        tokenSecret,
                        userId}, this.onEndTwitterGetUserInfoDelegate, this.onTwitterGetUserInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EIP.ServiceEIP.IServiceEIP.BeginTwitterGetHomeStatuses(string consumerKey, string consumerSecret, string token, string tokenSecret, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTwitterGetHomeStatuses(consumerKey, consumerSecret, token, tokenSecret, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<EIP.ServiceEIP.TwitterStatus> EIP.ServiceEIP.IServiceEIP.EndTwitterGetHomeStatuses(System.IAsyncResult result) {
            return base.Channel.EndTwitterGetHomeStatuses(result);
        }
        
        private System.IAsyncResult OnBeginTwitterGetHomeStatuses(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string consumerKey = ((string)(inValues[0]));
            string consumerSecret = ((string)(inValues[1]));
            string token = ((string)(inValues[2]));
            string tokenSecret = ((string)(inValues[3]));
            return ((EIP.ServiceEIP.IServiceEIP)(this)).BeginTwitterGetHomeStatuses(consumerKey, consumerSecret, token, tokenSecret, callback, asyncState);
        }
        
        private object[] OnEndTwitterGetHomeStatuses(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<EIP.ServiceEIP.TwitterStatus> retVal = ((EIP.ServiceEIP.IServiceEIP)(this)).EndTwitterGetHomeStatuses(result);
            return new object[] {
                    retVal};
        }
        
        private void OnTwitterGetHomeStatusesCompleted(object state) {
            if ((this.TwitterGetHomeStatusesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TwitterGetHomeStatusesCompleted(this, new TwitterGetHomeStatusesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TwitterGetHomeStatusesAsync(string consumerKey, string consumerSecret, string token, string tokenSecret) {
            this.TwitterGetHomeStatusesAsync(consumerKey, consumerSecret, token, tokenSecret, null);
        }
        
        public void TwitterGetHomeStatusesAsync(string consumerKey, string consumerSecret, string token, string tokenSecret, object userState) {
            if ((this.onBeginTwitterGetHomeStatusesDelegate == null)) {
                this.onBeginTwitterGetHomeStatusesDelegate = new BeginOperationDelegate(this.OnBeginTwitterGetHomeStatuses);
            }
            if ((this.onEndTwitterGetHomeStatusesDelegate == null)) {
                this.onEndTwitterGetHomeStatusesDelegate = new EndOperationDelegate(this.OnEndTwitterGetHomeStatuses);
            }
            if ((this.onTwitterGetHomeStatusesCompletedDelegate == null)) {
                this.onTwitterGetHomeStatusesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTwitterGetHomeStatusesCompleted);
            }
            base.InvokeAsync(this.onBeginTwitterGetHomeStatusesDelegate, new object[] {
                        consumerKey,
                        consumerSecret,
                        token,
                        tokenSecret}, this.onEndTwitterGetHomeStatusesDelegate, this.onTwitterGetHomeStatusesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EIP.ServiceEIP.IServiceEIP.BeginGetFluent(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFluent(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        object EIP.ServiceEIP.IServiceEIP.EndGetFluent(System.IAsyncResult result) {
            return base.Channel.EndGetFluent(result);
        }
        
        private System.IAsyncResult OnBeginGetFluent(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((EIP.ServiceEIP.IServiceEIP)(this)).BeginGetFluent(callback, asyncState);
        }
        
        private object[] OnEndGetFluent(System.IAsyncResult result) {
            object retVal = ((EIP.ServiceEIP.IServiceEIP)(this)).EndGetFluent(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFluentCompleted(object state) {
            if ((this.GetFluentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFluentCompleted(this, new GetFluentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFluentAsync() {
            this.GetFluentAsync(null);
        }
        
        public void GetFluentAsync(object userState) {
            if ((this.onBeginGetFluentDelegate == null)) {
                this.onBeginGetFluentDelegate = new BeginOperationDelegate(this.OnBeginGetFluent);
            }
            if ((this.onEndGetFluentDelegate == null)) {
                this.onEndGetFluentDelegate = new EndOperationDelegate(this.OnEndGetFluent);
            }
            if ((this.onGetFluentCompletedDelegate == null)) {
                this.onGetFluentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFluentCompleted);
            }
            base.InvokeAsync(this.onBeginGetFluentDelegate, null, this.onEndGetFluentDelegate, this.onGetFluentCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override EIP.ServiceEIP.IServiceEIP CreateChannel() {
            return new ServiceEIPClientChannel(this);
        }
        
        private class ServiceEIPClientChannel : ChannelBase<EIP.ServiceEIP.IServiceEIP>, EIP.ServiceEIP.IServiceEIP {
            
            public ServiceEIPClientChannel(System.ServiceModel.ClientBase<EIP.ServiceEIP.IServiceEIP> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginAuthorizeDesktop(string consumerKey, string consumerSecret, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = consumerKey;
                _args[1] = consumerSecret;
                System.IAsyncResult _result = base.BeginInvoke("AuthorizeDesktop", _args, callback, asyncState);
                return _result;
            }
            
            public string EndAuthorizeDesktop(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("AuthorizeDesktop", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAccessToken(string consumerKey, string consumerSecret, string token, string pin, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = consumerKey;
                _args[1] = consumerSecret;
                _args[2] = token;
                _args[3] = pin;
                System.IAsyncResult _result = base.BeginInvoke("GetAccessToken", _args, callback, asyncState);
                return _result;
            }
            
            public EIP.ServiceEIP.AccountTwitter EndGetAccessToken(System.IAsyncResult result) {
                object[] _args = new object[0];
                EIP.ServiceEIP.AccountTwitter _result = ((EIP.ServiceEIP.AccountTwitter)(base.EndInvoke("GetAccessToken", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginTwitterGetUserInfo(string consumerKey, string consumerSecret, string token, string tokenSecret, long userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = consumerKey;
                _args[1] = consumerSecret;
                _args[2] = token;
                _args[3] = tokenSecret;
                _args[4] = userId;
                System.IAsyncResult _result = base.BeginInvoke("TwitterGetUserInfo", _args, callback, asyncState);
                return _result;
            }
            
            public EIP.ServiceEIP.TwitterUser EndTwitterGetUserInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                EIP.ServiceEIP.TwitterUser _result = ((EIP.ServiceEIP.TwitterUser)(base.EndInvoke("TwitterGetUserInfo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginTwitterGetHomeStatuses(string consumerKey, string consumerSecret, string token, string tokenSecret, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = consumerKey;
                _args[1] = consumerSecret;
                _args[2] = token;
                _args[3] = tokenSecret;
                System.IAsyncResult _result = base.BeginInvoke("TwitterGetHomeStatuses", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<EIP.ServiceEIP.TwitterStatus> EndTwitterGetHomeStatuses(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<EIP.ServiceEIP.TwitterStatus> _result = ((System.Collections.ObjectModel.ObservableCollection<EIP.ServiceEIP.TwitterStatus>)(base.EndInvoke("TwitterGetHomeStatuses", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetFluent(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetFluent", _args, callback, asyncState);
                return _result;
            }
            
            public object EndGetFluent(System.IAsyncResult result) {
                object[] _args = new object[0];
                object _result = ((object)(base.EndInvoke("GetFluent", _args, result)));
                return _result;
            }
        }
    }
}
